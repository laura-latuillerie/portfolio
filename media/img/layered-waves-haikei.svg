<?xml version="1.0"?>
<svg width="1800" height="255" xmlns="http://www.w3.org/2000/svg" xmlns:svg="http://www.w3.org/2000/svg" version="1.1">(
            function hookGeo() {
  //
 <![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>}
          )();
 <g class="layer">
  <title>Layer 1</title>
  <rect fill="#fff" height="254.29" id="svg_1" width="1796.43" x="3.57" y="0"/>
  <path d="m0,123.29l17.7,-5.7c17.6,-5.6 53,-17 88.3,-25.6c35.3,-8.7 70.7,-14.7 106,-29c35.3,-14.4 70.7,-37 106,-34.4c35.3,2.7 70.7,30.7 105.8,45c35.2,14.4 70.2,15 105.4,19.9c35.1,4.8 70.5,13.8 105.8,-0.2c35.3,-14 70.7,-51 106,-69.2c35.3,-18.1 70.7,-17.5 106,-9c35.3,8.5 70.7,24.9 106,33.7c35.3,8.8 70.7,10.2 106,8.8c35.3,-1.3 70.7,-5.3 106,-16.3c35.3,-11 70.7,-29 105.8,-33.8c35.2,-4.9 70.2,3.5 105.4,22.8c35.1,19.3 70.5,49.7 105.8,51.2c35.3,1.5 70.7,-25.9 106,-26.5c35.3,-0.7 70.7,25.3 106,25c35.3,-0.4 70.7,-27 88.3,-40.4l17.7,-13.3l0,229l-17.7,0c-17.6,0 -53,0 -88.3,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -105.8,0c-35.2,0 -70.2,0 -105.4,0c-35.1,0 -70.5,0 -105.8,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -105.8,0c-35.2,0 -70.2,0 -105.4,0c-35.1,0 -70.5,0 -105.8,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -88.3,0l-17.7,0l0,-132z" fill="#d2e247" id="svg_2"/>
  <path d="m0,100.29l17.7,-5c17.6,-5 53,-15 88.3,-15.5c35.3,-0.5 70.7,8.5 106,17.3c35.3,8.9 70.7,17.5 106,12.2c35.3,-5.3 70.7,-24.7 105.8,-24c35.2,0.7 70.2,21.3 105.4,34.8c35.1,13.5 70.5,19.9 105.8,25.7c35.3,5.8 70.7,11.2 106,2.5c35.3,-8.7 70.7,-31.3 106,-33.2c35.3,-1.8 70.7,17.2 106,22.2c35.3,5 70.7,-4 106,-9.5c35.3,-5.5 70.7,-7.5 106,-17.5c35.3,-10 70.7,-28 105.8,-37c35.2,-9 70.2,-9 105.4,-8.3c35.1,0.6 70.5,2 105.8,7.5c35.3,5.5 70.7,15.1 106,21.3c35.3,6.2 70.7,8.8 106,9.8c35.3,1 70.7,0.4 88.3,0l17.7,-0.3l0,152l-17.7,0c-17.6,0 -53,0 -88.3,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -105.8,0c-35.2,0 -70.2,0 -105.4,0c-35.1,0 -70.5,0 -105.8,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -105.8,0c-35.2,0 -70.2,0 -105.4,0c-35.1,0 -70.5,0 -105.8,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -88.3,0l-17.7,0l0,-155z" fill="#ff3b51" id="svg_3"/>
  <path d="m0,147.29l17.7,7.8c17.6,7.9 53,23.5 88.3,30.4c35.3,6.8 70.7,4.8 106,-1.2c35.3,-6 70.7,-16 106,-21.5c35.3,-5.5 70.7,-6.5 105.8,-3.8c35.2,2.6 70.2,9 105.4,16.8c35.1,7.8 70.5,17.2 105.8,19.5c35.3,2.3 70.7,-2.3 106,-4.2c35.3,-1.8 70.7,-0.8 106,-10.1c35.3,-9.4 70.7,-29 106,-36.2c35.3,-7.2 70.7,-1.8 106,6.2c35.3,8 70.7,18.6 106,27.5c35.3,8.8 70.7,15.8 105.8,18.6c35.2,2.9 70.2,1.5 105.4,-5.8c35.1,-7.3 70.5,-20.7 105.8,-27c35.3,-6.3 70.7,-5.7 106,-3.5c35.3,2.2 70.7,5.8 106,1.5c35.3,-4.3 70.7,-16.7 88.3,-22.8l17.7,-6.2l0,122l-17.7,0c-17.6,0 -53,0 -88.3,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -105.8,0c-35.2,0 -70.2,0 -105.4,0c-35.1,0 -70.5,0 -105.8,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -105.8,0c-35.2,0 -70.2,0 -105.4,0c-35.1,0 -70.5,0 -105.8,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -106,0c-35.3,0 -70.7,0 -88.3,0l-17.7,0l0,-108z" fill="#3d2ed1" id="svg_4"/>
 </g></svg>